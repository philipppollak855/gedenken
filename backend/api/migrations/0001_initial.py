# Generated by Django 5.2.5 on 2025-08-26 19:35

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-Mail-Adresse')),
                ('first_name', models.CharField(blank=True, max_length=100, verbose_name='Vorname')),
                ('last_name', models.CharField(blank=True, max_length=100, verbose_name='Nachname')),
                ('role', models.CharField(choices=[('vorsorgender', 'Vorsorgender'), ('angehoeriger', 'Angehöriger'), ('gast', 'Gast'), ('administrator', 'Administrator')], default='vorsorgender', max_length=20, verbose_name='Rolle')),
                ('consent_admin_access', models.BooleanField(default=False, verbose_name='Zustimmung Admin-Zugriff')),
                ('profile_completeness', models.IntegerField(default=0, verbose_name='Profil-Vollständigkeit')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktiv')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Mitarbeiter')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellt am')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Zuletzt geändert')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Benutzer',
                'verbose_name_plural': 'Benutzer',
            },
        ),
        migrations.CreateModel(
            name='CandleMessageTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='Titel (für Dropdown)')),
                ('text', models.CharField(max_length=100, verbose_name='Vorlagen-Text')),
            ],
            options={
                'verbose_name': 'Gedenkkerzen-Vorlage',
                'verbose_name_plural': 'Gedenkkerzen-Vorlagen',
            },
        ),
        migrations.CreateModel(
            name='CondolenceTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='Titel (für Dropdown)')),
                ('text', models.TextField(verbose_name='Vorlagen-Text')),
            ],
            options={
                'verbose_name': 'Kondolenz-Vorlage',
                'verbose_name_plural': 'Kondolenz-Vorlagen',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='EventLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="z.B. 'Pfarrkirche St. Stephan'", max_length=255, verbose_name='Name des Ortes')),
                ('address', models.CharField(max_length=255, verbose_name='Adresse (Straße, PLZ, Ort)')),
            ],
            options={
                'verbose_name': 'Veranstaltungsort',
                'verbose_name_plural': 'Veranstaltungsorte (Stammdaten)',
            },
        ),
        migrations.CreateModel(
            name='MediaAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Titel / Name')),
                ('file_upload', models.FileField(blank=True, null=True, upload_to='media_assets/%Y/%m/', verbose_name='Datei-Upload (Lokal)')),
                ('file_url', models.URLField(blank=True, max_length=1024, null=True, verbose_name='Datei-URL (Extern)')),
                ('asset_type', models.CharField(choices=[('image', 'Bild'), ('document', 'Dokument'), ('other', 'Andere')], default='image', max_length=10, verbose_name='Dateityp')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Hochgeladen am')),
            ],
            options={
                'verbose_name': 'Mediendatei',
                'verbose_name_plural': 'Mediathek',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='LastWishes',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='last_wishes', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
                ('burial_type', models.CharField(blank=True, max_length=100, verbose_name='Bestattungsart')),
                ('burial_location', models.CharField(blank=True, max_length=255, verbose_name='Bestattungsort')),
                ('ceremony_type', models.CharField(blank=True, max_length=100, verbose_name='Zeremonie-Art')),
                ('ceremony_details', models.TextField(blank=True, verbose_name='Details zur Zeremonie')),
                ('music_wishes', models.JSONField(blank=True, default=list, verbose_name='Musikwünsche')),
                ('speaker_wishes', models.TextField(blank=True, verbose_name='Rednerwünsche')),
                ('flower_wishes', models.TextField(blank=True, verbose_name='Blumenwünsche')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Zuletzt geändert')),
            ],
            options={
                'verbose_name': 'Letzter Wunsch',
                'verbose_name_plural': 'Letzte Wünsche',
            },
        ),
        migrations.CreateModel(
            name='MemorialPage',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='memorial_page', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
                ('slug', models.SlugField(blank=True, help_text='Wird automatisch aus dem Namen generiert, wenn leer gelassen.', max_length=255, unique=True, verbose_name='URL-Alias')),
                ('status', models.CharField(choices=[('inactive', 'Inaktiv'), ('active', 'Aktiv'), ('archived', 'Archiviert')], default='inactive', max_length=10, verbose_name='Status')),
                ('first_name', models.CharField(blank=True, max_length=100, verbose_name='Vorname')),
                ('last_name', models.CharField(blank=True, max_length=100, verbose_name='Nachname')),
                ('birth_name_type', models.CharField(choices=[('geb', 'Geburtsname'), ('title', 'Titel')], default='geb', max_length=5, verbose_name='Art')),
                ('birth_name_or_title', models.CharField(blank=True, max_length=100, verbose_name='Geburtsname / Titel')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Geburtsdatum')),
                ('date_of_death', models.DateField(blank=True, null=True, verbose_name='Sterbedatum')),
                ('cemetery', models.CharField(blank=True, max_length=255, verbose_name='Friedhof')),
                ('hero_background_size', models.CharField(choices=[('cover', 'Gestreckt (füllend)'), ('contain', 'Eingepasst (komplett sichtbar)')], default='cover', max_length=10, verbose_name='Anpassung Hintergrundbild Hero')),
                ('obituary', models.TextField(blank=True, verbose_name='Nachruf')),
                ('donation_text', models.TextField(blank=True, verbose_name='Angezeigter Spendenaufruf')),
                ('donation_link', models.URLField(blank=True, max_length=255, verbose_name='Spenden-Link')),
                ('donation_bank_details', models.TextField(blank=True, verbose_name='Spenden-Bankverbindung')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellt am')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Zuletzt geändert')),
                ('farewell_background_color', models.CharField(blank=True, help_text='Hex-Code, z.B. #f4f1ee', max_length=7, verbose_name='Hintergrundfarbe Abschied')),
                ('farewell_background_size', models.CharField(choices=[('cover', 'Gestreckt (füllend)'), ('contain', 'Eingepasst (komplett sichtbar)')], default='cover', max_length=10, verbose_name='Anpassung Hintergrundbild Abschied')),
                ('farewell_text_inverted', models.BooleanField(default=False, verbose_name='Textfarbe im Abschiedsbereich umkehren (für helle Hintergründe)')),
                ('show_memorial_picture', models.BooleanField(default=True, verbose_name='Gedenkbild anzeigen')),
                ('acknowledgement_type', models.CharField(choices=[('none', 'Keine Danksagung'), ('image', 'Bild'), ('text', 'Text')], default='none', max_length=5, verbose_name='Art der Danksagung')),
                ('acknowledgement_text', models.TextField(blank=True, verbose_name='Danksagung (Text)')),
                ('condolence_moderation', models.CharField(choices=[('not_moderated', 'Nicht moderiert (sofort sichtbar)'), ('admin_moderated', 'Von Admin moderiert'), ('family_moderated', 'Von Familie moderiert')], default='not_moderated', max_length=20, verbose_name='Kondolenz-Moderation')),
                ('acknowledgement_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='api.mediaasset', verbose_name='Danksagung Bild')),
                ('farewell_background_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='api.mediaasset', verbose_name='Hintergrundbild Abschied')),
                ('hero_background_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='api.mediaasset', verbose_name='Hintergrundbild Hero-Bereich')),
                ('main_photo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='api.mediaasset', verbose_name='Portraitbild Hero-Bereich')),
                ('memorial_picture', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='api.mediaasset', verbose_name='Gedenkbild Vorderseite')),
                ('memorial_picture_back', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='api.mediaasset', verbose_name='Gedenkbild Rückseite')),
                ('obituary_card_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='api.mediaasset', verbose_name='Partezettel Bild')),
            ],
            options={
                'verbose_name': 'Gedenkseite',
                'verbose_name_plural': 'Gedenkseiten',
            },
        ),
        migrations.CreateModel(
            name='ContractItem',
            fields=[
                ('item_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('contract_type', models.CharField(max_length=100, verbose_name='Vertragsart')),
                ('provider', models.CharField(max_length=255, verbose_name='Anbieter')),
                ('contract_number', models.CharField(blank=True, max_length=255, verbose_name='Vertragsnummer')),
                ('notice_period', models.CharField(blank=True, max_length=255, verbose_name='Kündigungsfrist')),
                ('notes', models.TextField(blank=True, verbose_name='Notizen')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellt am')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contract_items', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Vertrags-Eintrag',
                'verbose_name_plural': 'Vertrags-Einträge',
            },
        ),
        migrations.CreateModel(
            name='DigitalLegacyItem',
            fields=[
                ('item_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category', models.CharField(max_length=100, verbose_name='Kategorie')),
                ('provider', models.CharField(max_length=255, verbose_name='Anbieter')),
                ('username_email', models.CharField(blank=True, max_length=255, verbose_name='Benutzername/E-Mail')),
                ('password_hint', models.TextField(blank=True, verbose_name='Passworthinweis')),
                ('instruction', models.TextField(verbose_name='Anweisung')),
                ('notes', models.TextField(blank=True, verbose_name='Notizen')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellt am')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Zuletzt geändert')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='legacy_items', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Digitaler Nachlass Eintrag',
                'verbose_name_plural': 'Digitale Nachlass Einträge',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('doc_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255, verbose_name='Titel')),
                ('document_type', models.CharField(max_length=100, verbose_name='Dokumententyp')),
                ('file', models.FileField(upload_to='documents/%Y/%m/%d/', verbose_name='Datei')),
                ('storage_location_hint', models.TextField(blank=True, verbose_name='Lagerort-Hinweis')),
                ('visible_in_vorsorgefall', models.BooleanField(default=False, verbose_name='Im Vorsorgefall sichtbar')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Hochgeladen am')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Dokument',
                'verbose_name_plural': 'Dokumente',
            },
        ),
        migrations.CreateModel(
            name='FinancialItem',
            fields=[
                ('item_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('product_type', models.CharField(max_length=100, verbose_name='Produktart')),
                ('institute', models.CharField(max_length=255, verbose_name='Institut')),
                ('contract_number', models.CharField(max_length=255, verbose_name='Vertragsnummer/IBAN')),
                ('notes', models.TextField(blank=True, verbose_name='Notizen')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellt am')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='financial_items', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Finanz-Eintrag',
                'verbose_name_plural': 'Finanz-Einträge',
            },
        ),
        migrations.CreateModel(
            name='InsuranceItem',
            fields=[
                ('item_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('insurance_type', models.CharField(max_length=100, verbose_name='Versicherungsart')),
                ('company', models.CharField(max_length=255, verbose_name='Gesellschaft')),
                ('policy_number', models.CharField(max_length=255, verbose_name='Policennummer')),
                ('notes', models.TextField(blank=True, verbose_name='Notizen')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellt am')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insurance_items', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Versicherungs-Eintrag',
                'verbose_name_plural': 'Versicherungs-Einträge',
            },
        ),
        migrations.CreateModel(
            name='CandleImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name der Kerze')),
                ('type', models.CharField(choices=[('standard', 'Standardkerze'), ('birthday', 'Geburtstagskerze'), ('anniversary', 'Jahrestagskerze')], default='standard', max_length=20, verbose_name='Typ')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='api.mediaasset', verbose_name='Kerzen-Bilddatei')),
            ],
            options={
                'verbose_name': 'Kerzenbild',
                'verbose_name_plural': 'Kerzenbilder (Sammlung)',
            },
        ),
        migrations.CreateModel(
            name='MemorialEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_public', models.BooleanField(default=True, help_text='Wenn deaktiviert, ist der gesamte Termin nicht sichtbar.', verbose_name='Termin öffentlich anzeigen')),
                ('title', models.CharField(help_text="z.B. 'Trauerfeier', 'Beisetzung', 'Rosenkranz'", max_length=255, verbose_name='Titel des Termins')),
                ('date', models.DateTimeField(verbose_name='Datum und Uhrzeit')),
                ('show_location', models.BooleanField(default=True, verbose_name='Ort anzeigen')),
                ('show_dresscode', models.BooleanField(default=False, verbose_name='Dresscode anzeigen')),
                ('dresscode', models.CharField(blank=True, help_text="z.B. 'Dunkle Kleidung erbeten', 'In Gedenken an seine Lebensfreude bitten wir um helle Kleidung'", max_length=255, verbose_name='Dresscode')),
                ('show_condolence_note', models.BooleanField(default=True, verbose_name='Kondolenz-Hinweis anzeigen')),
                ('condolence_note', models.CharField(blank=True, default='Von Beileidsbezeugungen am Grab bitten wir Abstand zu nehmen.', help_text="z.B. 'Von Beileidsbezeugungen am Grab bitten wir Abstand zu nehmen.'", max_length=255, verbose_name='Hinweis zu Kondolenzbezeugungen')),
                ('show_donation_info', models.BooleanField(default=False, verbose_name='Spendeninformationen anzeigen')),
                ('donation_for', models.CharField(blank=True, help_text="z.B. 'Krebshilfe Österreich', 'Tierheim St. Pölten'", max_length=255, verbose_name='Spende zugunsten von')),
                ('description', models.TextField(blank=True, help_text='Platz für zusätzliche Informationen, z.B. zum anschließenden Leichenschmaus.', verbose_name='Weitere Details')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.eventlocation', verbose_name='Veranstaltungsort')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='api.memorialpage', verbose_name='Zugehörige Gedenkseite')),
            ],
            options={
                'verbose_name': 'Termin',
                'verbose_name_plural': 'Termine',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='EventAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guest_name', models.CharField(max_length=255, verbose_name='Name des Gastes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Zusage am')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='event_attendances', to=settings.AUTH_USER_MODEL)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendees', to='api.memorialevent')),
            ],
            options={
                'verbose_name': 'Teilnahme',
                'verbose_name_plural': 'Teilnahmen',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReleaseRequest',
            fields=[
                ('request_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('deceased_first_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Vorname (Verstorbener)')),
                ('deceased_last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nachname (Verstorbener)')),
                ('deceased_date_of_birth', models.DateField(blank=True, null=True, verbose_name='Geburtsdatum (Verstorbener)')),
                ('deceased_date_of_death', models.DateField(blank=True, null=True, verbose_name='Sterbedatum (Verstorbener)')),
                ('reporter_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name des Meldenden')),
                ('reporter_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-Mail des Meldenden')),
                ('reporter_password', models.CharField(blank=True, max_length=128, null=True, verbose_name='Passwort (gehasht)')),
                ('reporter_relationship', models.CharField(blank=True, max_length=100, null=True, verbose_name='Beziehung zum Verstorbenen')),
                ('death_certificate', models.FileField(blank=True, null=True, upload_to='certificates/%Y/%m/%d/', verbose_name='Sterbeurkunde')),
                ('status', models.CharField(choices=[('pending', 'Ausstehend'), ('approved', 'Genehmigt'), ('rejected', 'Abgelehnt')], default='pending', max_length=10, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Eingegangen am')),
                ('resolved_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Zugeordneter Vorsorge-Account')),
            ],
            options={
                'verbose_name': 'Freigabe-Anfrage',
                'verbose_name_plural': 'Freigabe-Anfragen',
            },
        ),
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('listing_title', models.CharField(blank=True, default='Wir trauern um', max_length=100, verbose_name='Titel über den Gedenkkarten')),
                ('listing_background_color', models.CharField(blank=True, help_text='Hex-Code, z.B. #f4f1ee', max_length=7, verbose_name='Hintergrundfarbe Startseite')),
                ('listing_card_color', models.CharField(blank=True, help_text='Hex-Code, z.B. #ffffff', max_length=7, verbose_name='Karten-Hintergrundfarbe')),
                ('listing_text_color', models.CharField(blank=True, help_text='Hex-Code, z.B. #3a3a3a', max_length=7, verbose_name='Textfarbe')),
                ('listing_arrow_color', models.CharField(blank=True, default='#8c8073', help_text='Hex-Code, z.B. #8c8073', max_length=7, verbose_name='Pfeilfarbe')),
                ('search_title', models.CharField(blank=True, default='Verstorbenen Suche', max_length=100, verbose_name='Titel im Suchbereich')),
                ('search_helper_text', models.TextField(blank=True, default='Bitte geben Sie einen oder mehrere Suchbegriffe in die obenstehenden Felder ein, um nach einem Verstorbenen zu suchen.', verbose_name='Hilfstext im Suchbereich')),
                ('search_background_color', models.CharField(blank=True, help_text='Hex-Code, z.B. #e5e0da', max_length=7, verbose_name='Hintergrundfarbe Suche')),
                ('search_text_color', models.CharField(blank=True, help_text='Hex-Code, z.B. #3a3a3a', max_length=7, verbose_name='Textfarbe Suche')),
                ('expend_background_color', models.CharField(blank=True, help_text='Hex-Code, z.B. #f4f1ee', max_length=7, verbose_name='Hintergrundfarbe Expand-Bereich')),
                ('expend_card_color', models.CharField(blank=True, help_text='Hex-Code, z.B. #ffffff', max_length=7, verbose_name='Karten-Hintergrundfarbe Expand')),
                ('expend_text_color', models.CharField(blank=True, help_text='Hex-Code, z.B. #3a3a3a', max_length=7, verbose_name='Textfarbe Expand-Bereich')),
                ('stat_users_color', models.CharField(blank=True, default='#d1ecf1', help_text='Hex-Code', max_length=7, verbose_name="Farbe Statistik 'Benutzer'")),
                ('stat_pages_color', models.CharField(blank=True, default='#d1ecf1', help_text='Hex-Code', max_length=7, verbose_name="Farbe Statistik 'Gedenkseiten'")),
                ('stat_releases_color', models.CharField(blank=True, default='#fff3cd', help_text='Hex-Code', max_length=7, verbose_name="Farbe Statistik 'Freigaben'")),
                ('stat_condolences_color', models.CharField(blank=True, default='#f8d7da', help_text='Hex-Code', max_length=7, verbose_name="Farbe Statistik 'Kondolenzen'")),
                ('expend_background_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='api.mediaasset', verbose_name='Hintergrundbild Expand-Bereich')),
                ('listing_background_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='api.mediaasset', verbose_name='Hintergrundbild Startseite')),
                ('search_background_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='api.mediaasset', verbose_name='Hintergrundbild Suche')),
            ],
            options={
                'verbose_name': 'Globale Design-Einstellungen',
                'verbose_name_plural': 'Globale Design-Einstellungen',
            },
        ),
        migrations.CreateModel(
            name='TimelineEvent',
            fields=[
                ('event_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(verbose_name='Datum des Ereignisses')),
                ('title', models.CharField(max_length=255, verbose_name='Titel')),
                ('description', models.TextField(blank=True, verbose_name='Beschreibung')),
                ('image_url', models.URLField(blank=True, null=True, verbose_name='Bild-URL')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timeline_events', to='api.memorialpage')),
            ],
            options={
                'verbose_name': 'Chronik-Ereignis',
                'verbose_name_plural': 'Chronik-Ereignisse',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='MemorialCandle',
            fields=[
                ('candle_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('guest_name', models.CharField(blank=True, max_length=255, verbose_name='Name des Gastes')),
                ('message', models.CharField(blank=True, max_length=100, verbose_name='Kurze Nachricht')),
                ('is_private', models.BooleanField(default=False, verbose_name='Nur für Familie')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellt am')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='candles', to=settings.AUTH_USER_MODEL)),
                ('candle_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.candleimage', verbose_name='Ausgewähltes Kerzenbild')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candles', to='api.memorialpage')),
            ],
            options={
                'verbose_name': 'Gedenkkerze',
                'verbose_name_plural': 'Gedenkkerzen',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GalleryItem',
            fields=[
                ('item_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('caption', models.CharField(blank=True, max_length=255, verbose_name='Bildunterschrift')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.mediaasset', verbose_name='Bild')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery_items', to='api.memorialpage')),
            ],
            options={
                'verbose_name': 'Galerie-Eintrag',
                'verbose_name_plural': 'Galerie-Einträge',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Condolence',
            fields=[
                ('condolence_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('guest_name', models.CharField(max_length=255, verbose_name='Name des Gastes')),
                ('message', models.TextField(verbose_name='Nachricht')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Genehmigt')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellt am')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='condolences', to=settings.AUTH_USER_MODEL)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='condolences', to='api.memorialpage', verbose_name='Gedenkseite')),
            ],
            options={
                'verbose_name': 'Kondolenz',
                'verbose_name_plural': 'Kondolenzen',
            },
        ),
        migrations.CreateModel(
            name='FamilyLink',
            fields=[
                ('link_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_main_contact', models.BooleanField(default=False, verbose_name='Hauptansprechpartner')),
                ('deceased_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='family_links_as_deceased', to=settings.AUTH_USER_MODEL, verbose_name='Verstorbener')),
                ('relative_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='family_links_as_relative', to=settings.AUTH_USER_MODEL, verbose_name='Angehöriger')),
            ],
            options={
                'verbose_name': 'Angehörigen-Verknüpfung',
                'verbose_name_plural': 'Angehörigen-Verknüpfungen',
                'unique_together': {('deceased_user', 'relative_user')},
            },
        ),
    ]
