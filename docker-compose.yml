# docker-compose.yml
# KORRIGIERT: Der Build-Kontext wurde angepasst, um die Render-Umgebung zu spiegeln.

services:
  backend:
    build:
      context: . # Verwendet das Projekt-Hauptverzeichnis als Kontext
      dockerfile: backend/Dockerfile # Gibt den Pfad zum Dockerfile an
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env.dev
    depends_on:
      - db
    restart: always

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: npm start
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true

  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=vorsorge_user
      - POSTGRES_PASSWORD=vorsorge_pass
      - POSTGRES_DB=vorsorge_db

volumes:
  postgres_data:
